BROKER SCHEMA esb.primark.oracle

/*
* Filename ESB_PIAT_INVOICE_STATUS_CMF_Compute.esql
* Modulename ESB_PIAT_INVOICE_STATUS_CMF_TransformXMLToJSONFile
* Interfacename PI177 AP Payment Details
* Date        ProjectName               Name            Version   Description
* 02/01/2017 Oracle Financials      K Abdul Azharudeen  0.1       Initial Version - Transformation from XML to JSON
* 17/01/2017 Oracle Financials      K Abdul Azharudeen  0.2       Changed some fields as per the DOMD V0.5
* 26/01/2017 Oracle Financials      K Abdul Azharudeen  0.3       Changed mappings as per the requirement
*/
CREATE COMPUTE MODULE ESB_PIAT_INVOICE_STATUS_CMF_TransformXMLToJSONFile
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET Environment.Variables.UUID = InputRoot.MQRFH2.usr.UUID ; -- For Audit Purpose.
		CREATE FIELD OutputRoot.JSON.Data.changes IDENTITY(JSON.Array)changes;
		--Variable Declaration
		DECLARE inRefData REFERENCE TO OutputRoot.XMLNSC.INVOICE;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.changes;		

		CREATE FIRSTCHILD OF outRef AS outRef NAME 'Item';
		SET outRef.operation = 1;
		SET outRef.keyFields VALUE = null;
		SET outRef.ID VALUE = null;
		CREATE FIELD outRef.dataFields;
		DECLARE outRefData REFERENCE TO outRef.dataFields;
		SET outRefData.docid = '0';
		SET outRefData.vendor_num = NULLIF(inRefData.VENDOR_NUM,'');
		SET outRefData.vendor_site_code = NULLIF(inRefData.VENDOR_SITE_CODE,'');
		SET outRefData.invoice_num = NULLIF(inRefData.INVOICE_NUM,'');
		SET outRefData.voucher_num = NULLIF(inRefData.VOUCHER_NUM,'');
		SET outRefData.source = inRefData.SOURCE;
		SET outRefData.source_invoice_ref = inRefData.SOURCE_INVOICE_REF;
		SET outRefData.invoice_status = inRefData.INVOICE_STATUS;
		SET outRefData.import_error_message = NULLIF(inRefData.IMPORT_ERROR_MESSAGE,'');
		SET outRefData.invoice_total = CAST(NULLIF(inRefData.INVOICE_TOTAL,'') AS DECIMAL);
		SET outRefData.total_amount_paid = CAST(NULLIF(inRefData.TOTAL_AMOUNT_PAID,'') AS DECIMAL);
		SET outRefData.paid_fully_flag = NULLIF(inRefData.PAID_FULLY_FLAG,'');
		SET outRefData.payment_status = NULLIF(inRefData.PAYMENT.PAYMENT_STATUS,'');
		SET outRefData.payment_date = CAST(NULLIF(inRefData.PAYMENT.PAYMENT_DATE,'') AS DATE FORMAT 'yyyy-MM-dd');
		SET outRefData.payment_amount = CAST(NULLIF(inRefData.PAYMENT.PAYMENT_AMOUNT,'') AS DECIMAL);
		SET outRefData.payment_number = NULLIF(inRefData.PAYMENT.PAYMENT_NUMBER,'');
		SET outRefData.payment_currency = NULLIF(inRefData.PAYMENT.PAYMENT_CURRENCY,'');
		SET outRefData.void_date = CAST(NULLIF(inRefData.PAYMENT.VOID_DATE,'') AS DATE FORMAT 'yyyy-MM-dd');
		SET outRefData.extraction_date = inRefData.EXTRACTION_DATE;
		SET outRefData.esb_insert_date_time = REPLACE(CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy-MM-dd HH:mm:ss'),' ','T');
		DELETE FIELD OutputRoot.XMLNSC;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;