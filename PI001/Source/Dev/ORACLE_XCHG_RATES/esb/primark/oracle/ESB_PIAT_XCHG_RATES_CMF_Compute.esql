BROKER SCHEMA esb.primark.oracle
/*
* Filename ESB_PIAT_XCHG_RATES_CMF_Compute.esql
* Modulename ESB_PIAT_XCHG_RATES_CMF_Compute, ValidatePIATResponse_Compute
* Interfacename PI184 ORACLE FINANCE: Exchange Rate transfer from Oracle to PIAT
* Date ProjectName Name Version Description
* 23/12/2016 ORACLE FINANCE Vasuki P 0.1 Initial Version - Transformation from XML to JSON.
* 30/12/2016 ORACLE FINANCE Vasuki P 0.2 Updated Version - As per the IQA review.
* 01/02/2017 ORACLE FINANCE M.Keertana 0.3 Updated Version - Few more feilds were added.
*/
/*Starting of the Module ESB_PIAT_XCHG_RATES_CMF_Compute*/

DECLARE InterfaceId EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE ESB_PIAT_XCHG_RATES_CMF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--CALL CopyEntireMessage();
		/*Creating Input/Output xml References*/
		DECLARE indataRef REFERENCE TO InputRoot.XMLNSC;
		CREATE FIELD OutputRoot.JSON.Data.changes IDENTITY(JSON.Array) changes;
		DECLARE outdataRef REFERENCE TO OutputRoot.JSON.Data.changes;
		CREATE FIRSTCHILD OF outdataRef AS outdataRef NAME 'Item' ;
		SET outdataRef.operation = 1;
		SET outdataRef.keyFields VALUE = null;
		SET outdataRef.ID VALUE = null;
		CREATE FIELD outdataRef.dataFields;
		DECLARE outRef REFERENCE TO outdataRef.dataFields;
		DECLARE fxdataRef REFERENCE TO InputRoot.XMLNSC.FX_RATE;
		SET outRef.docid = '0';
		SET outRef.operating_unit = '000';
		SET outRef.conversion_type=fxdataRef.CONVERSION_TYPE;
		SET outRef.conversion_date=fxdataRef.CONVERSION_DATE;
		SET outRef.from_currency=fxdataRef.FROM_CURRENCY;
		SET outRef.from_currency_name=fxdataRef.FROM_CURRENCY_NAME;
		SET outRef.to_currency=fxdataRef.TO_CURRENCY;
		SET outRef.to_currency_name=fxdataRef.TO_CURRENCY_NAME;
		SET outRef.conversion_rate=fxdataRef.CONVERSION_RATE;
		SET outRef.extraction_date=fxdataRef.EXTRACTION_DATE;
		SET outRef.esb_insert_date_time= REPLACE(CAST(CURRENT_TIMESTAMP AS CHAR FORMAT 'yyyy-MM-dd HH:mm:ss') , ' ' , 'T');
		SET Environment.Variables.UUID = InputRoot.MQRFH2.usr.UUID;
		/*END of the code for XML to JSON Transformation*/
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
/*END of the Module ESB_PIAT_XCHG_RATES_CMF_Compute*/
CREATE COMPUTE MODULE ValidatePIATResponse_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE CaptureBusinessData_CMF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		 SET Environment.Variables.BussinessInfo.MessageId = OutputRoot.MQRFH2.usr.UUID;
		 PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		 SET Environment.Variables.InterfaceId = InterfaceId;
		 PROPAGATE TO TERMINAL 'out' DELETE NONE;
		 RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

/*END of the Module ValidatePIATResponse_Compute*/