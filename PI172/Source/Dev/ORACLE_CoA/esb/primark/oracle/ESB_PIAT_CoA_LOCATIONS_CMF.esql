/*
* Filename 	 ESB_PIAT_CoA_LOCATIONS_CMF.esql
* Modulename TransformLocationsCDMToJSONFile
* Interfacename PI179 ORACLE_CoA
* Date	      ProjectName       Name		    Version		    Description
* 26/01/2017  ORACLE_CoA	 G Sugumar Raja		  0.1 	 Initial Version - Transforming Locations CDM data to JSON  
														 data with Direct Mapping and Sending it to PIAT Server.
* 04/07/2017  ORACLE_CoA	 G Sugumar Raja		  0.2 	 Transforming Locations CDM data to JSON  
														 data with Business_Units as per the DOMD (v0.11)																 
*/ 

BROKER SCHEMA esb.primark.oracle

CREATE COMPUTE MODULE TransformLocationsCDMToJSONFile
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		  CALL CopyMessageHeaders();
--		  CALL CopyEntireMessage();
			-- Variables Declaration 
		 DECLARE headRef REFERENCE TO InputRoot.XMLNSC.Location.Header;
		 DECLARE payloadRef REFERENCE TO InputRoot.XMLNSC.Location.Payload.Site;
		 DECLARE buRef REFERENCE TO payloadRef.BusinessUnitSite;
		 SET Environment.Variables.UUID = InputRoot.MQRFH2.usr.UUID ; -- For Audit Purpose.
		 	-- Transforming Locations data from CDM Format to JSON Format as per the DOMD.
		 CREATE FIELD OutputRoot.JSON.Data.changes IDENTITY(JSON.Array) changes;
		 DECLARE locationdataRef REFERENCE TO OutputRoot.JSON.Data.changes;
		 CREATE FIRSTCHILD OF locationdataRef AS locationdataRef NAME 'Item' ;
		 SET locationdataRef.operation = 1;
		 SET locationdataRef.keyFields VALUE = null;
		 SET locationdataRef.ID VALUE = null;
		 CREATE FIELD locationdataRef.dataFields;
		 DECLARE locRef REFERENCE TO locationdataRef.dataFields;
		 
		 SET locRef.docid = '0';
		 SET locRef.oracle_location_code = payloadRef.SiteId;
		 SET locRef.oracle_location_description = payloadRef.SiteDesc;
		 SET locRef.sun_location_code = NULLIF(payloadRef.SunLoc,'');
		 SET locRef.start_date_active = payloadRef.OpenDate;
		 SET locRef.end_date_active = payloadRef.ClosingDate;
		 SET locRef.extraction_date = headRef.CreatedTimestamp;
		 SET locRef.operating_unit = buRef.BusinessUnitEntity;
    	 IF buRef.BusinessUnitEnabled = 'N' THEN
			SET locRef.enabled_flag = 'N';
		 ELSE
		 	SET locRef.enabled_flag = payloadRef.EnabledFlag;
		 END IF;
		 SET locRef.esb_insert_date_time = REPLACE(CAST(CURRENT_TIMESTAMP AS CHAR FORMAT 'yyyy-MM-dd HH:mm:ss') , ' ' , 'T');
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


